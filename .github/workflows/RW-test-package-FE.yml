name: RW - Test - Package FE 

on:
  workflow_call:
    inputs:
      branch:
        description: 'A  branch name passed from the caller workflow'
        default: 'develop'
        required: true
        type: string
      api_url:
        description: 'ERAS API url'
        default: 'https://ec2-18-219-214-67.us-east-2.compute.amazonaws.com:5001'
        required: true
        type: string
      keycloak_url:
        description: 'Jala logion API url'
        default: 'https://dev.login.jala-one.com/auth'
        required: true
        type: string
      client_id:
        description: 'client id'
        default: 'eras'
        required: true
        type: string
      web_url:
        description: 'ERAS web app'
        default: 'https://ec2-18-219-214-67.us-east-2.compute.amazonaws.com'
        required: true
        type: string
      dockerhub_username:
        description: 'ERAS dockerhub account username'
        default: 'erasadmin'
        required: true
        type: string
      environment_tag:
        description: 'ERAS environment tag'
        default: 'dev'
        required: true
        type: string
    secrets:
      dockerhub_token:
        description: 'ERAS dockerhub account token'
        required: true
  workflow_dispatch:
    inputs:
      branch:
        description: 'Environment'
        required: true
        default: 'develop'
        type: environment
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '23.6.0'

      - name: Install dependencies
        run: npm install

      - name: Set up Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: 'latest'

      - name: Run tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless --code-coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

  package:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set variables
        id: set-vars
        run: |
          REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          SHORT_SHA=$(git rev-parse --short $GITHUB_SHA)
          LAST_TAG=$(git describe --tags --abbrev=0)
          echo "REPO_NAME=${REPO_NAME}" >> $GITHUB_ENV
          echo "SHORT_SHA=${SHORT_SHA}" >> $GITHUB_ENV
          echo "LAST_TAG=${LAST_TAG}" >> $GITHUB_ENV
      - name: Replace environment variables
        run: |
          cp src/environments/environment.production.sample.ts src/environments/environment.production.ts
          sed -i "s|__API_URL__|${{ inputs.api_url }}|g" src/environments/environment.production.ts
          sed -i "s|__KEYCLOAK_URL__|${{ inputs.keycloak_url }}|g" src/environments/environment.production.ts
          sed -i "s|__CLIENT_ID__|${{ inputs.client_id }}|g" src/environments/environment.production.ts
          sed -i "s|__WEB_URL__|${{ inputs.web_url }}|g" src/environments/environment.production.ts
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ inputs.dockerhub_username }}
          password: ${{ secrets.dockerhub_token }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ inputs.dockerhub_username }}/${{ env.REPO_NAME }}:${{ env.LAST_TAG }}-${{ env.SHORT_SHA }}-${{ inputs.environment_tag }}
